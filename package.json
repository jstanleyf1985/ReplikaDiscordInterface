{
  "name": "replika-discord-interface",
  "version": "1.0.0",
  "description": "A program for communicating to your replika using discord as an interface",
  "main": "./dist/main.js",
  "proxy": "http://localhost:3001",
  "scripts": {
    "dev": "npm-run-all -p dev:react electron:serve",
    "dev:electron": "cross-env NODE_ENV=development webpack --config webpack/electron.webpack.js --mode development && npm run start:electron",
    "dev:react": "cross-env NODE_ENV=development webpack-dev-server --config webpack/react.webpack.js --mode development",
    "electron:serve": "wait-on http-get://localhost:4000/ && npm run dev:electron",
    "start": "wait-on http-get://localhost:4000/ && npm run dev:electron",
    "start:electron": "electron .",
    "build": "npm-run-all build:electron build:react",
    "build:run": "npm-run-all build start:electron",
    "build:electron": "webpack --config webpack/electron.webpack.js",
    "build:react": "webpack --config webpack/react.webpack.js",
    "package": "npm-run-all build package:dist",
    "package:dist": "electron-builder --win portable",
    "test": "jest"
  },
  "keywords": [],
  "author": "Jonathan Stanley <jstanleyf@outlook.com>",
  "license": "MIT",
  "devDependencies": {
    "@commitlint/cli": "^9.0.1",
    "@commitlint/config-conventional": "^9.0.1",
    "@commitlint/core": "^9.0.1",
    "@testing-library/jest-dom": "^5.11.0",
    "@testing-library/react": "^10.4.3",
    "@types/electron-devtools-installer": "^2.2.0",
    "@types/styled-components": "^5.1.10",
    "@typescript-eslint/eslint-plugin": "^3.4.0",
    "@typescript-eslint/parser": "^3.4.0",
    "commitizen": "^4.1.2",
    "cz-conventional-changelog": "3.2.0",
    "electron": "^8.2.2",
    "electron-builder": "^22.7.0",
    "electron-devtools-installer": "^3.1.0",
    "electron-installer-windows": "^3.0.0",
    "electron-packager": "^15.2.0",
    "eslint": "^7.3.1",
    "eslint-config-prettier": "^6.11.0",
    "eslint-config-standard": "^14.1.1",
    "eslint-import-resolver-typescript": "^2.0.0",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.1.4",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-react": "^7.20.1",
    "eslint-plugin-standard": "^4.0.1",
    "html-webpack-plugin": "^4.2.0",
    "husky": "^4.2.5",
    "jest": "^26.1.0",
    "lint-staged": "^10.2.11",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.0.5",
    "ts-jest": "^26.1.1",
    "wait-on": "^5.0.1",
    "webpack": "^4.42.1",
    "webpack-cli": "^3.3.11",
    "webpack-dev-server": "^3.10.3"
  },
  "dependencies": {
    "@babel/core": "^7.9.0",
    "@babel/preset-env": "^7.9.5",
    "@babel/preset-react": "^7.9.4",
    "@babel/preset-typescript": "^7.9.0",
    "@fortawesome/fontawesome-svg-core": "^1.2.35",
    "@fortawesome/free-brands-svg-icons": "^5.15.3",
    "@fortawesome/free-regular-svg-icons": "^5.15.3",
    "@fortawesome/free-solid-svg-icons": "^5.15.3",
    "@fortawesome/react-fontawesome": "^0.1.14",
    "@types/dompurify": "^2.2.3",
    "@types/jest": "^26.0.24",
    "@types/react": "^16.14.8",
    "@types/react-dom": "^16.9.6",
    "alertifyjs": "^1.13.1",
    "babel-loader": "^8.1.0",
    "cors": "^2.8.5",
    "cross-env": "^7.0.2",
    "css-loader": "^5.2.6",
    "discord.js": "^12.5.3",
    "dompurify": "^2.2.9",
    "express": "^4.17.1",
    "file-loader": "^6.2.0",
    "fs-extra": "^10.0.0",
    "kill-port": "^1.6.1",
    "nightmare": "^3.0.2",
    "playwright": "^1.13.0",
    "react": "^16.14.0",
    "react-dom": "^16.13.1",
    "style-loader": "^2.0.0",
    "styled-components": "^5.1.1",
    "typescript": "^3.9.5",
    "url-loader": "^4.1.1",
    "use-sound": "^4.0.1"
  },
  "build": {
    "appId": "your.id",
    "mac": {
      "category": "public.app-category.video"
    },
    "directories": {
      "output": "packages"
    },
    "files": [
      "package.json",
      "dist/**"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "prepare-commit-msg": "exec < /dev/tty && git cz --hook || true",
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix"
    ]
  }
}
